<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:sec="http://www.springframework.org/schema/security" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-4.0.xsd">

<!-- 	<sec:http pattern="/index.html" security="none" />
	<sec:http pattern="/resources/**" security="none" />
        <sec:http pattern="/404.html" security="none" />
	<sec:http pattern="/bower_components/**" security="none" />
        <sec:http pattern="/documents/**" security="none" />
	<sec:http pattern="/images/**" security="none" />
	<sec:http pattern="/lang/**" security="none" />
	<sec:http pattern="/scripts/**" security="none" />
	<sec:http pattern="/styles/**" security="none" />
	<sec:http pattern="/views/**" security="none" /> -->
<!-- 	<sec:http pattern="/acmgt-api/sooa/accounts/**" security="none" />
        <sec:http pattern="/sooa/usernames/**" security="none" />
	<sec:http pattern="/sooa/emails/**" security="none" />
	<sec:http pattern="/sooa/issues/**" security="none" />-->
	<sec:http create-session="ifRequired" use-expressions="true">
		<sec:intercept-url pattern="/acmgt-api/sooa/accounts/**" access="isAnonymous()" />
                <sec:intercept-url pattern="/acmgt-api/sooa/usernames/**" access="isAnonymous()" />
                <sec:intercept-url pattern="/acmgt-api/sooa/emails/**" access="isAnonymous()" />
                <sec:intercept-url pattern="/acmgt-api/sooa/issues/**" access="isAnonymous() or isFullyAuthenticated()" />
                <sec:intercept-url pattern="/acmgt-api/accounts/cuser" access="isAnonymous() or isFullyAuthenticated()" />
		<sec:intercept-url pattern="/**" access="isFullyAuthenticated()" />
                <sec:intercept-url pattern="/j_spring_security_logout" access="isFullyAuthenticated()" />
<!-- 		<sec:intercept-url pattern="/**" -->
<!-- 			access="isFullyAuthenticated() and hasRole('admin')" /> -->
		<sec:http-basic entry-point-ref="restAuthenticationEntryPoint" />
		<sec:logout logout-success-url="/index.html" />
	</sec:http>

	<bean id="restAuthenticationEntryPoint"
		class="gov.nist.healthcare.nht.acmgt.web.RestAuthenticationEntryPoint" />

	<sec:global-method-security
		pre-post-annotations="enabled">
		<sec:expression-handler ref="expressionHandler" />
	</sec:global-method-security>

	<sec:authentication-manager alias="authenticationManager">
		<sec:authentication-provider
			user-service-ref="userDetailsService">
			<sec:password-encoder ref="shaPasswordEncoder">
				<sec:salt-source user-property="username" />
			</sec:password-encoder>
		</sec:authentication-provider>
	</sec:authentication-manager>

	<bean id="shaPasswordEncoder"
		class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<constructor-arg value="256" />
	</bean>
	
	<bean id="userDetailsService"
		class="gov.nist.healthcare.nht.acmgt.general.CustomJdbcUserDetailsManager">
		<property name="dataSource" ref="authDataSource" />
		<property name="authenticationManager" ref="authenticationManager" />
	</bean>
	
<!-- 	<bean id="userDetailsService"
		class="org.springframework.security.provisioning.JdbcUserDetailsManager">
		<property name="dataSource" ref="authDataSource" />
		<property name="authenticationManager" ref="authenticationManager" />
	</bean> -->

	<bean id="authDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.acmgt.auth.url}"
		p:username="${jdbc.acmgt.auth.username}" p:password="${jdbc.acmgt.auth.password}"
		p:testWhileIdle="${jdbc.acmgt.auth.testWhileIdle}" p:testOnBorrow="${jdbc.acmgt.auth.testOnBorrow}"
		p:validationQuery="${jdbc.acmgt.auth.validationQuery}" destroy-method="close" />

	<bean id="expressionHandler"
		class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<property name="permissionEvaluator" ref="permissionEvaluator" />
	</bean>
	
	<bean id="permissionEvaluator" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="targetSource">
			<bean class="org.springframework.aop.target.LazyInitTargetSource">
				<property name="targetBeanName" value="customPermissionEvaluator" />
			</bean>
		</property>
		<property name="proxyInterfaces"
			value="org.springframework.security.access.PermissionEvaluator" />
	</bean>

</beans>